(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{437:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"python"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[t._v("#")]),t._v(" python")]),t._v(" "),n("h2",{attrs:{id:"python3标准库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python3标准库"}},[t._v("#")]),t._v(" python3标准库")]),t._v(" "),n("p",[t._v("https://docs.python.org/zh-cn/3.7/library/index.html")]),t._v(" "),n("h2",{attrs:{id:"数据结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),n("p",[t._v("三大类："),n("code",[t._v("序列、映射、集合")])]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("###序列：列表[]")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n函数:\nlen(list)：列表元素个数\nmax(list)：返回列表元素最大值\nmin(list)：返回列表元素最小值\nlist(seq)：将元组转换为列表\n\n方法:\nlist.append(obj)：在列表末尾添加新的对象\nlist.count(obj)：统计某个元素在列表中出现的次数\nlist.extend(seq)：在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）\nlist.index(obj)：从列表中找出某个值第一个匹配项的索引位置\nlist.insert(index, obj)：将对象插入列表\nlist.pop(obj=list[-1])：移除列表中的一个元素（默认最后一个元素），并且返回该元素的值\nlist.remove(obj)：移除列表中某个值的第一个匹配项\nlist.reverse()：反向列表中元素\nlist.sort([func])：对原列表进行排序\n\n\ncopy()与deepcopy():\n不可变的对象(数字，字符串，元组)，深浅拷贝没有区别\n\nb=a\nb=a.copy()\n\n'''")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br")])]),n("hr"),t._v(" "),n("p",[t._v("###序列：元组()")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n函数：\nlen(list)：元组元素个数\nmax(list)：返回元组元素最大值\nmin(list)：返回元组元素最小值\ntuple(seq)：将列表转换为元组\n\n'''")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一个数的元组,(1)会被看作是数字")]),t._v("\ntp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntup1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("34.56")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntup2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xyz'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改元组是非法的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tup1[0] = 100")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用del语句来删除整个元组")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" tup1\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br")])]),n("hr"),t._v(" "),n("p",[t._v("###序列：字符串str")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{},{} '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("hr"),t._v(" "),n("p",[t._v("###映射：字典dict")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("函数")]),t._v(" "),n("th",[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("D")]),t._v(" "),n("td",[t._v("字典对象")])]),t._v(" "),n("tr",[n("td",[t._v("D.clear()")]),t._v(" "),n("td",[t._v("清空字典")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("D.pop(key)")])]),t._v(" "),n("td",[t._v("移除键，同时返回此键所对应的值")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("D.copy()")])]),t._v(" "),n("td",[t._v("返回字典D的副本,"),n("code",[t._v("只复制一层(浅拷贝)")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("D.update(D2)")])]),t._v(" "),n("td",[t._v("将字典 D2 合并到D中，如果键相同，则此键的值取D2的值作为新值")])]),t._v(" "),n("tr",[n("td",[t._v("D.get(key, default)")]),t._v(" "),n("td",[t._v("返回键key所对应的值,如果没有此键，则返回default")])]),t._v(" "),n("tr",[n("td",[t._v("D.keys()")]),t._v(" "),n("td",[t._v("返回可迭代的 dict_keys 集合对象")])]),t._v(" "),n("tr",[n("td",[t._v("D.values()")]),t._v(" "),n("td",[t._v("返回可迭代的 dict_values 值对象")])]),t._v(" "),n("tr",[n("td",[t._v("D.items()")]),t._v(" "),n("td",[t._v("返回可迭代的 dict_items 对象")])]),t._v(" "),n("tr",[n("td",[t._v("copy.deepcopy")]),t._v(" "),n("td",[t._v("深拷贝拷贝，父级目录，子级目录全部拷贝")])])])]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("dict1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'num'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 原字典")]),t._v("\ndict2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dict1 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 直接赋值")]),t._v("\ndict3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dict1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("copy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 浅拷贝，只深拷贝父级目录")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" copy\ndict4 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" copy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deepcopy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dict1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 深拷贝拷贝，父级目录，子级目录全部拷贝")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("hr"),t._v(" "),n("p",[t._v("###集合：set")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("strs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jeff'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wong'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cnblogs'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnums"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("table",[n("thead",[n("tr",[n("th",[t._v("set()")]),t._v(" "),n("th",[t._v("创建一个空的集合对象(不能用{}来创建空集合)")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("set(iterable)")]),t._v(" "),n("td",[t._v("用可迭代对象创建一个新的集合对象")])])])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("strong",[t._v("方法")])]),t._v(" "),n("th",[n("strong",[t._v("意义")])])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("S.add(e)")]),t._v(" "),n("td",[t._v("在集合中添加一个新的元素e；如果元素已经存在，则不添加")])]),t._v(" "),n("tr",[n("td",[t._v("S.remove(e)")]),t._v(" "),n("td",[t._v("从集合中删除一个元素，如果元素不存在于集合中，则会产生一个KeyError错误")])]),t._v(" "),n("tr",[n("td",[t._v("S.discard(e)")]),t._v(" "),n("td",[t._v("从集合S中移除一个元素e,在元素e不存在时什么都不做;")])]),t._v(" "),n("tr",[n("td",[t._v("S.clear()")]),t._v(" "),n("td",[t._v("清空集合内的所有元素")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("S.copy()")])]),t._v(" "),n("td",[t._v("将集合进行一次"),n("code",[t._v("浅拷贝")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("S.pop()")])]),t._v(" "),n("td",[t._v("从集合S中"),n("code",[t._v("删除一个随机元素")]),t._v(";如果此集合为空，则引发KeyError异常")])]),t._v(" "),n("tr",[n("td",[t._v("S.update(s2)")]),t._v(" "),n("td",[t._v("用 S与s2得到的全集更新变量S")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("S.difference(s2)")])]),t._v(" "),n("td",[t._v("用"),n("code",[t._v("S - s2")]),t._v(" 运算，返回"),n("code",[t._v("存在于在S中，但不在s2中")]),t._v("的所有元素的集合")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("S.difference_update(s2)")])]),t._v(" "),n("td",[t._v("等同于 "),n("code",[t._v("S = S - s2")])])]),t._v(" "),n("tr",[n("td",[t._v("S.intersection(s2)")]),t._v(" "),n("td",[t._v("等同于 S & s2")])]),t._v(" "),n("tr",[n("td",[t._v("S.intersection_update(s2)")]),t._v(" "),n("td",[t._v("等同于S = S & s2")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("S.isdisjoint(s2)")])]),t._v(" "),n("td",[t._v("如果S与s2交集为空返回True,非空则返回False")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("S.issubset(s2)")])]),t._v(" "),n("td",[t._v("如果S与s2交集为非空返回True,空则返回False")])]),t._v(" "),n("tr",[n("td",[t._v("S.issuperset(...)")]),t._v(" "),n("td",[t._v("如果S为s2的子集返回True,否则返回False")])]),t._v(" "),n("tr",[n("td",[t._v("S.symmetric_difference(s2)")]),t._v(" "),n("td",[t._v("返回对称补集,等同于 S ^ s2")])]),t._v(" "),n("tr",[n("td",[t._v("S.symmetric_difference_update(s2)")]),t._v(" "),n("td",[t._v("用 S 与 s2 的对称补集更新 S")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("S.union(s2)")])]),t._v(" "),n("td",[t._v("生成 S 与 s2的全集")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);