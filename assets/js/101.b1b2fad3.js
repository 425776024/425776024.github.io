(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{455:function(t,r,e){"use strict";e.r(r);var s=e(0),v=Object(s.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("leetcode部分，参考于：https://github.com/grandyang/leetcode/blob/master/README-CN.md")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("数据结构")]),t._v(" "),e("th",[t._v("leetcode")]),t._v(" "),e("th",[t._v("动态规划")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/1.选择排序.html"}},[t._v("1.选择排序")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/leetcode/903.html"}},[t._v("903-Valid Permutations for DI Sequence")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/shit/01背包.html"}},[t._v("01背包")])],1)]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/2.冒泡排序.html"}},[t._v("2.冒泡排序")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/leetcode/902.html"}},[t._v("902-Numbers At Most N Given Digit Set")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/shit/Dijkstra.html"}},[t._v("Dijkstra")])],1)]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/3.插入排序.html"}},[t._v("3.插入排序")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/leetcode/904.html"}},[t._v("904-Fruit Into Baskets")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/shit/钢材切割价值最大.html"}},[t._v("钢材切割，价值最大")])],1)]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/4.希尔排序.html"}},[t._v("4.希尔排序")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/leetcode/903.html"}},[t._v("903-Valid Permutations for DI Sequence:Hard")])],1),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/5.快速排序.html"}},[t._v("5.快速排序")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/leetcode/902.html"}},[t._v("902-Numbers At Most N Given Digit Set:Hard")])],1),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/5.三向切分快速排序.html"}},[t._v("5.三向切分快速排序")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/leetcode/901.html"}},[t._v("901-Online Stock Span:Medium")])],1),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/6.归并排序.html"}},[t._v("6.归并排序")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/leetcode/900.html"}},[t._v("900-RLE Iterator:Mediums")])],1),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/7.堆排序.html"}},[t._v("7.堆排序")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/leetcode/899.html"}},[t._v("899-Orderly Queue:Hard")])],1),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/8.实现一个argsort.html"}},[t._v("8.实现一个argsort")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/leetcode/898.html"}},[t._v("898-Bitwise ORs of Subarrays:Medium")])],1),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/9.子串第一次出现位置kmp.html"}},[t._v("9.子串第一次出现位置kmp")])],1),t._v(" "),e("td",[e("router-link",{attrs:{to:"/views/structcode/leetcode/895.html"}},[t._v("895-Maximum Frequency Stack:Hard")])],1),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/10.字符串是否相同.html"}},[t._v("10.字符串是否相同")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/11.搜索插入位置.html"}},[t._v("11.搜索插入位置")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/12.二分搜索-木材切割问题.html"}},[t._v("12.二分搜索-木材切割问题")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/12.二分搜索-求根.html"}},[t._v("12.二分搜索-求根")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/13.二分-查找峰值.html"}},[t._v("13.(二分)查找峰值")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/14.在旋转数组中查找元素.html"}},[t._v("14.在旋转数组中查找元素")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/15.递归-多少种不同路径.html"}},[t._v("15.(递归)多少种不同路径")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/16.最小路径和.html"}},[t._v("16.最小路径和")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/17.删除排序链表中的重复元素.html"}},[t._v("17.删除排序链表中的重复元素")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/18.相同的树.html"}},[t._v("18.相同的树")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/19.二叉树的最小深度.html"}},[t._v("19.二叉树的最小深度")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("router-link",{attrs:{to:"/views/structcode/start/20.单链表交叉点.html"}},[t._v("20.单链表交叉点")])],1),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td"),t._v(" "),e("td")])])])])}),[],!1,null,null,null);r.default=v.exports}}]);